import cardinal_coords

def test_stripCountyName():
    unstrippedStr = "County,-85.45690 32.45678"
    validStrip = "-85.45690 32.45678"

    assert cardinal_coords.stripCountyName(unstrippedStr) == validStrip

def test_getCounty():
    testInput = ['St.','Clair','Johnson','South,-85.3456,35.23546','-85.45690 32.45678']
    validOutput = "St. Clair Johnson South"

    assert cardinal_coords.getCounty(testInput) == validOutput

def test_dictifyLongLats():
    filename = "AZ"
    dictionary = cardinal_coords.dictifyLongLats(filename)
    
    assert dictionary != {}

def test_calcCardDirections():
    ## test data from IL state file
    testInput = {'McHenry': {'long': ['-88.19878', '-88.1986', '-88.1986', '-88.19865', '-88.19893', '-88.19898', '-88.19901', '-88.1987', 
    '-88.19848', '-88.19845', '-88.19872', '-88.19878', '-88.19892', '-88.19924', '-88.19936', '-88.19943', '-88.19958', '-88.1995', '-88.19958', 
    '-88.20084', '-88.20157', '-88.20511', '-88.20628', '-88.20693', '-88.20824', '-88.20925', '-88.21178', '-88.21184', '-88.21187', '-88.21676', 
    '-88.21934', '-88.22282', '-88.22337', '-88.22383', '-88.22529', '-88.22966', '-88.23095', '-88.23111', '-88.23225', '-88.23567', '-88.2368', 
    '-88.23707', '-88.23755', '-88.23771', '-88.2382', '-88.23837', '-88.23958', '-88.25317', '-88.2618', '-88.26631', '-88.27728', '-88.28465', 
    '-88.29156', '-88.29432', '-88.30048', '-88.30807', '-88.32117', '-88.33421', '-88.34686', '-88.36899', '-88.38917', '-88.40013', '-88.41283', 
    '-88.42513', '-88.44242', '-88.44603', '-88.45457', '-88.45918', '-88.47205', '-88.50603', '-88.54523', '-88.57409', '-88.58866', '-88.59284', 
    '-88.59328', '-88.61198', '-88.61203', '-88.61218', '-88.61766', '-88.6177', '-88.62225', '-88.62399', '-88.62515', '-88.63051', '-88.63112', 
    '-88.63356', '-88.63518', '-88.63641', '-88.63792', '-88.64233', '-88.6464', '-88.64647', '-88.647', '-88.64719', '-88.65268', '-88.66639', 
    '-88.66647', '-88.67472', '-88.69568', '-88.70563', '-88.70562', '-88.70567', '-88.70557', '-88.70555', '-88.70548', '-88.7053', '-88.70531', 
    '-88.70541', '-88.70543', '-88.70537', '-88.70524', '-88.70537', '-88.70552', '-88.70545', '-88.70546', '-88.70551', '-88.70558', '-88.70563', 
    '-88.70561', '-88.7056', '-88.70569', '-88.70578', '-88.70585', '-88.70599', '-88.7063', '-88.70685', '-88.70738', '-88.70438', '-88.68061', 
    '-88.66079', '-88.63864', '-88.5896', '-88.56588', '-88.55919', '-88.52571', '-88.50744', '-88.50572', '-88.4861', '-88.47497', '-88.46887', 
    '-88.46181', '-88.45369', '-88.43729', '-88.4226', '-88.42201', '-88.41347', '-88.3784', '-88.33491', '-88.33076', '-88.32825', '-88.32437', 
    '-88.31612', '-88.31029', '-88.30469', '-88.30439', '-88.303', '-88.30273', '-88.28407', '-88.281', '-88.27955', '-88.27846', '-88.27641', 
    '-88.27289', '-88.27186', '-88.2707', '-88.27028', '-88.26902', '-88.26591', '-88.26009', '-88.25403', '-88.24827', '-88.24745', '-88.23789', 
    '-88.22788', '-88.2237', '-88.21703', '-88.21636', '-88.21332', '-88.20645', '-88.20067', '-88.19953', '-88.1995', '-88.19899', '-88.19888', 
    '-88.19886', '-88.19882', '-88.19882', '-88.19881', '-88.19878'], 'lat': ['42.3683', '42.34468', '42.3358', '42.32872', '42.32308', '42.29955', 
    '42.28608', '42.27962', '42.27303', '42.26744', '42.2582', '42.24808', '42.236', '42.2167', '42.20652', '42.19728', '42.18179', '42.15805', 
    '42.15426', '42.15426', '42.15426', '42.15426', '42.15428', '42.15427', '42.15426', '42.15427', '42.15426', '42.15426', '42.15426', '42.15428', 
    '42.15428', '42.15428', '42.15429', '42.15428', '42.15428', '42.15429', '42.15429', '42.15429', '42.15429', '42.15429', '42.15429', '42.15429', 
    '42.15428', '42.15427', '42.15426', '42.15425', '42.15419', '42.15387', '42.15393', '42.15369', '42.15393', '42.15377', '42.15381', '42.15366', 
    '42.15382', '42.15382', '42.15386', '42.15393', '42.15414', '42.15404', '42.15391', '42.15393', '42.15432', '42.15385', '42.15425', '42.15394', 
    '42.15417', '42.15419', '42.15413', '42.15393', '42.15365', '42.15358', '42.15359', '42.15356', '42.15355', '42.15347', '42.15347', '42.15345', 
    '42.15341', '42.15342', '42.15345', '42.15347', '42.15347', '42.15346', '42.15346', '42.15346', '42.15346', '42.15346', '42.15346', '42.15346', 
    '42.15346', '42.15345', '42.15345', '42.15345', '42.15346', '42.15344', '42.15344', '42.15346', '42.15352', '42.15356', '42.17096', '42.18401', 
    '42.2024', '42.20785', '42.21928', '42.22163', '42.22318', '42.22471', '42.2281', '42.23011', '42.23122', '42.23277', '42.24936', '42.25572', 
    '42.25605', '42.25778', '42.27052', '42.30664', '42.32788', '42.34992', '42.3727', '42.38664', '42.40496', '42.42219', '42.4513', '42.47494', 
    '42.4936', '42.49367', '42.49423', '42.49476', '42.49498', '42.49503', '42.49501', '42.495', '42.49492', '42.49481', '42.49478', '42.49462', 
    '42.49462', '42.49465', '42.4948', '42.49477', '42.49471', '42.49455', '42.4946', '42.49462', '42.49452', '42.49462', '42.49462', '42.49462', 
    '42.49462', '42.49462', '42.49462', '42.49462', '42.49462', '42.49462', '42.49462', '42.49478', '42.4948', '42.49482', '42.49482', '42.49482', 
    '42.49482', '42.49474', '42.49469', '42.49468', '42.49469', '42.4947', '42.49478', '42.49487', '42.49488', '42.49488', '42.49489', '42.49498', 
    '42.49503', '42.49504', '42.49505', '42.49529', '42.49561', '42.49474', '42.49457', '42.49241', '42.45905', '42.43782', '42.42705', '42.41708', 
    '42.41127', '42.39964', '42.37514']}}
    validOutput = {'McHenry':{'North':42.49561,"East":-88.19845,"South":42.15341,"West":-88.70738}}

    assert cardinal_coords.calcCardDirections(testInput) == validOutput

def test_calcMinMaxLongs():
    test1 = ['85.129','85.130','-85.124','12.235','-199.452']
    test1West = -199.452
    test1East = 85.130
    assert cardinal_coords.calcMinMaxLong(test1) == (test1West, test1East)

    test2 = ['-165.345','98.345','00.000','45.234']
    test2West = -165.345
    test2East = 98.345
    assert cardinal_coords.calcMinMaxLong(test2) == (test2West, test2East)

def test_calcMinMaxLats():
    test1 = ['85.129','85.130','-85.124','12.235','-199.452']
    test1North = 85.130
    test1South = -199.452
    assert cardinal_coords.calcMinMaxLat(test1) == (test1North, test1South)

    test2 = ['-165.345','98.345','00.000','45.234']
    test2North = 98.345
    test2South = -165.345
    assert cardinal_coords.calcMinMaxLat(test2) == (test2North, test2South)

